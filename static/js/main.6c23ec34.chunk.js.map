{"version":3,"sources":["constants.ts","components/ImageWithPlaceHolder.tsx","components/ImageMessage.tsx","components/TextMessage.tsx","components/UnknownMessage.tsx","components/UserMessageContent.tsx","components/Avatar.tsx","components/MyMessage.tsx","components/OtherMessage.tsx","components/WithdrawMessage.tsx","components/TimeMessage.tsx","components/SystemMessage.tsx","components/BaseMessage.tsx","components/MessageList.tsx","components/InputBox.tsx","mock/RandomMessage.ts","mock/index.ts","service.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MessageTypes","MessageFrom","ImageWithPlaceHolder","src","renderPlaceHolder","alt","imgClassName","imgStyle","useState","loaded","setLoaded","onLoad","style","display","className","ImageMessage","data","height","Math","min","width","PlaceHolder","speed","viewBox","x","y","once","scrollContainer","content","TextMessage","UnknownMessage","MessageComponentsMap","IMAGE","TEXT","UNKNOWN","UserMessageContent","MessageComponent","type","AvatarPlaceHolder","cx","cy","r","Avartar","avatar","MyMessage","Avatar","OtherMessage","WithdrawMessage","TimeMessage","WITHDRAW","TIME","SystemMessage","ME","OTHER","SYSTEM","BaseMessage","from","MessageList","messageList","loadMore","total","pageStart","hasMore","length","useWindow","loader","threshold","isReverse","map","message","id","InputBox","RandomMessage","Random","guid","createTime","datetime","userName","userMessageProducer","pick","cparagraph","image","split","Number","this","producer","undefined","contentProducer","Mock","setup","timeout","mock","list","Array","fill","getMessages","a","axios","get","result","App","setMessageList","setTotal","loading","setLoading","useCallback","messagesRes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c23ec34.chunk.js","sourcesContent":["// 消息类型\nexport enum MessageTypes {\n  UNKNOWN = 0,\n  TEXT = 1,\n  IMAGE = 2,\n  WITHDRAW = 3,\n  TIME = 4,\n}\n\n// 消息来源\nexport enum MessageFrom {\n  // 当前用户发送的\n  ME = 1,\n  // 别人发送的\n  OTHER = 2,\n  // 系统发送的\n  SYSTEM = 3\n}\n","import React, { useState } from 'react'\n\ninterface Props {\n  src: string\n  renderPlaceHolder: () => JSX.Element\n  alt?: string\n  imgClassName?: string\n  imgStyle?: any\n}\n\n// 简单封装一个带默认占位的图片\nexport default function ImageWithPlaceHolder({\n  src,\n  renderPlaceHolder,\n  alt = '',\n  imgClassName = '',\n  imgStyle,\n}: Props) {\n  const [loaded, setLoaded] = useState(false)\n\n  return (\n    <div>\n      <img\n        src={src}\n        alt={alt}\n        onLoad={() => setLoaded(true)}\n        style={{ display: loaded ? 'block' : 'none', ...imgStyle }}\n        className={imgClassName}\n      />\n      {!loaded && renderPlaceHolder()}\n    </div>\n  )\n}\n","import React from 'react'\nimport ContentLoader from 'react-content-loader'\nimport LazyLoad from 'react-lazyload'\nimport { IImageMessage } from '../data'\nimport ImageWithPlaceHolder from './ImageWithPlaceHolder'\n\ninterface Props {\n  data: IImageMessage\n}\n\nconst ImageMessage = ({ data }: Props) => {\n  // 预览图最高不超过 100 px\n  const height = Math.min(data.height, 100)\n  const width = (data.width / data.height) * height\n\n  const PlaceHolder = () => {\n    return (\n      <ContentLoader\n        speed={2}\n        width={width}\n        height={height}\n        viewBox={`0 0 ${width} ${height}`}\n      >\n        <rect x=\"0\" y=\"0\" width={width} height={height} />\n      </ContentLoader>\n    )\n  }\n\n  return (\n    <LazyLoad once height={height} scrollContainer=\".message-list-container\">\n      <ImageWithPlaceHolder\n        imgStyle={{ height, width }}\n        src={data.content}\n        alt=\"\"\n        renderPlaceHolder={() => <PlaceHolder />}\n      />\n    </LazyLoad>\n  )\n}\n\nexport default ImageMessage\n","import React from 'react'\nimport { ITextMessage } from '../data'\n\ninterface Props {\n  data: ITextMessage\n}\n\nconst TextMessage = ({ data }: Props) => {\n  return <div>{data.content}</div>\n}\n\nexport default TextMessage\n","import React from 'react'\nimport { IMessageDataFromUser } from '../data'\n\ninterface Props {\n  data: IMessageDataFromUser\n}\n\nconst UnknownMessage = ({ data }: Props) => {\n  return <div>{data.content}</div>\n}\n\nexport default UnknownMessage\n","import React from 'react'\nimport { IMessageDataFromUser, IImageMessage, IUnknownMessage } from '../data'\nimport { MessageTypes } from '../constants'\nimport ImageMessage from './ImageMessage'\nimport TextMessage from './TextMessage'\nimport UnknownMessage from './UnknownMessage'\n\ninterface Props {\n  data: IMessageDataFromUser & IImageMessage & IUnknownMessage\n}\n\nconst MessageComponentsMap: {\n  [key: string]: ({ data }: Props) => JSX.Element\n} = {\n  [MessageTypes.IMAGE]: ImageMessage,\n  [MessageTypes.TEXT]: TextMessage,\n  [MessageTypes.UNKNOWN]: UnknownMessage,\n}\n\nconst UserMessageContent = ({ data }: Props) => {\n  const MessageComponent = MessageComponentsMap[data.type]\n  return (\n    <div>\n      <MessageComponent data={data} />\n    </div>\n  )\n}\n\nexport default UserMessageContent\n","import React from 'react'\nimport ContentLoader from 'react-content-loader'\nimport LazyLoad from 'react-lazyload'\nimport ImageWithPlaceHolder from './ImageWithPlaceHolder'\n\ninterface Props {\n  avatar: string\n}\n\nconst AvatarPlaceHolder = () => {\n  return (\n    <ContentLoader speed={2} width={36} height={36} viewBox=\"0 0 36 36\">\n      <circle cx=\"18\" cy=\"18\" r=\"18\" />\n    </ContentLoader>\n  )\n}\n\nconst Avartar = ({ avatar }: Props) => {\n  return (\n    <LazyLoad once height={36} scrollContainer=\".message-list-container\">\n      <div className=\"avatar-wrap\">\n        <ImageWithPlaceHolder\n          imgClassName=\"avatar\"\n          src={avatar}\n          renderPlaceHolder={() => <AvatarPlaceHolder />}\n        />\n      </div>\n    </LazyLoad>\n  )\n}\n\nexport default Avartar\n","import React from 'react'\nimport { IImageMessage, ITextMessage, IUnknownMessage } from '../data'\nimport UserMessageContent from './UserMessageContent'\nimport Avatar from './Avatar'\n\ninterface Props {\n  data: ITextMessage & IImageMessage & IUnknownMessage\n}\n\n// 来自自己的消息\nconst MyMessage = ({ data }: Props) => {\n  return (\n    <div className=\"my-message-container\">\n      <Avatar avatar={data.avatar} />\n      <div className=\"content-wrap\">\n        <UserMessageContent data={data} />\n      </div>\n    </div>\n  )\n}\n\nexport default MyMessage\n","import React from 'react'\nimport { IImageMessage, ITextMessage, IUnknownMessage } from '../data'\nimport UserMessageContent from './UserMessageContent'\nimport Avatar from './Avatar'\n\ninterface Props {\n  data: ITextMessage & IImageMessage & IUnknownMessage\n}\n\n// 来自别人的消息\nconst OtherMessage = ({ data }: Props) => {\n  return (\n    <div className=\"other-message-container\">\n      <Avatar avatar={data.avatar} />\n      <div className=\"content-wrap\">\n        <UserMessageContent data={data} />\n      </div>\n    </div>\n  )\n}\n\nexport default OtherMessage\n","import React from 'react'\nimport { IMessageDataFromSystem } from '../data'\n\ninterface Props {\n  data: IMessageDataFromSystem\n}\n\nconst WithdrawMessage = ({ data }: Props) => {\n  return <div className=\"withraw-content\">{data.content}</div>\n}\n\nexport default WithdrawMessage\n","import React from 'react'\nimport { IMessageDataFromSystem } from '../data'\n\ninterface Props {\n  data: IMessageDataFromSystem\n}\n\nconst TimeMessage = ({ data }: Props) => {\n  return <div className=\"time-content\">{data.content}</div>\n}\n\nexport default TimeMessage\n","import React from 'react'\nimport { IMessageDataFromSystem } from '../data'\nimport { MessageTypes } from '../constants'\nimport WithdrawMessage from './WithdrawMessage'\nimport TimeMessage from './TimeMessage'\n\ninterface Props {\n  data: IMessageDataFromSystem\n}\n\nconst MessageComponentsMap: {\n  [key: string]: ({ data }: Props) => JSX.Element\n} = {\n  [MessageTypes.WITHDRAW]: WithdrawMessage,\n  [MessageTypes.TIME]: TimeMessage,\n}\n\n// 来自系统的消息\nconst SystemMessage = ({ data }: Props) => {\n  const MessageComponent = MessageComponentsMap[data.type]\n  return (\n    <div className=\"system-message-container\">\n      <MessageComponent data={data} />\n    </div>\n  )\n}\n\nexport default SystemMessage\n","import React from 'react'\nimport {  IIntersectionMessageData } from '../data'\nimport { MessageFrom } from '../constants'\nimport MyMessage from './MyMessage'\nimport OtherMessage from './OtherMessage'\nimport SystemMessage from './SystemMessage'\n\ninterface Props {\n  data: IIntersectionMessageData\n}\n\nconst MessageComponentsMap = {\n  [MessageFrom.ME]: MyMessage,\n  [MessageFrom.OTHER]: OtherMessage,\n  [MessageFrom.SYSTEM]: SystemMessage,\n}\n\nconst BaseMessage = ({ data }: Props) => {\n  const MessageComponent = MessageComponentsMap[data.from]\n  return <MessageComponent data={data} />\n}\n\nexport default BaseMessage\n","import React from 'react'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { IUnioMessageData, IIntersectionMessageData } from '../data'\nimport BaseMessage from './BaseMessage'\n\ninterface Props {\n  messageList: IUnioMessageData[]\n  total: number\n  loadMore: () => void\n}\n\nconst MessageList = ({ messageList, loadMore, total }: Props) => {\n  return (\n    <div className=\"message-list-container\">\n      <InfiniteScroll\n        pageStart={0}\n        hasMore={messageList.length < total || messageList.length === 0}\n        useWindow={false}\n        loadMore={loadMore}\n        loader={\n          <div className=\"loader\" key={0}>\n            Loading...\n          </div>\n        }\n        threshold={20}\n        isReverse\n      >\n        {messageList.map((message) => {\n          return (\n            <BaseMessage\n              key={message.id}\n              data={message as IIntersectionMessageData}\n            />\n          )\n        })}\n      </InfiniteScroll>\n    </div>\n  )\n}\n\nexport default MessageList\n","import React from 'react'\n\nconst InputBox = () =>{\n  return <div className=\"input-box-container\"></div>\n}\n\nexport default InputBox\n","import { Random } from 'mockjs'\nimport { MessageFrom, MessageTypes } from '../constants'\n\nclass RandomMessage {\n  id: string = Random.guid()\n  createTime: string = Random.datetime()\n  type: MessageTypes = 0\n  content: string = ''\n  from: MessageFrom\n  userName?: string\n  avatar?: string\n  height?: number\n  width?: number\n\n  userMessageProducer = () => {\n    this.type = Random.pick([\n      MessageTypes.TEXT,\n      MessageTypes.IMAGE,\n      MessageTypes.UNKNOWN,\n    ])\n    const contentProducer: { [key: string]: () => void } = {\n      [MessageTypes.TEXT]: () => {\n        this.content = Random.cparagraph(1, 3)\n      },\n      [MessageTypes.IMAGE]: () => {\n        this.content = Random.image(\n          Random.pick(['300x250', '250x250', '240x400'])\n        )\n        const [width, height] = this.content.split(/\\/+/)[2].split('x')\n        this.width = Number(width)\n        this.height = Number(height)\n      },\n      [MessageTypes.UNKNOWN]: () => {\n        this.content = '【未知消息类型】'\n      },\n    }\n    contentProducer[this.type]()\n  }\n\n  get producer() {\n    return {\n      [MessageFrom.ME]: () => {\n        this.userName = '我'\n        this.avatar = Random.image('40x40', undefined, '我')\n        this.userMessageProducer()\n      },\n      [MessageFrom.OTHER]: () => {\n        this.userName = Random.pick(['甲', '乙', '丙'])\n        this.avatar = Random.image('40x40', undefined, this.userName)\n        this.userMessageProducer()\n      },\n      [MessageFrom.SYSTEM]: () => {\n        this.type = Random.pick([MessageTypes.TIME, MessageTypes.WITHDRAW])\n        const contentProducer: { [key: string]: string } = {\n          [MessageTypes.TIME]: Random.datetime(),\n          [MessageTypes.WITHDRAW]: `${Random.pick([\n            '甲',\n            '乙',\n            '丙',\n          ])}撤回一条消息`,\n        }\n        this.content = contentProducer[this.type]\n      },\n    }\n  }\n\n  constructor() {\n    this.from = Random.pick([\n      MessageFrom.ME,\n      MessageFrom.OTHER,\n      MessageFrom.SYSTEM,\n    ])\n    this.producer[this.from]()\n  }\n}\n\nexport default RandomMessage\n","import Mock, { Random } from 'mockjs'\nimport RandomMessage from './RandomMessage'\n\n// 模拟接口延时\nMock.setup({\n  timeout: '1000',\n})\n\nMock.mock('/messages', function () {\n  // 随机生成不同类型的 20 条消息\n  const list = new Array(20).fill('').map(() => {\n    const randomMessage = new RandomMessage()\n    return randomMessage\n  })\n  return {\n    list,\n    // 假设一共 100 条\n    total: 100,\n  }\n})\n","import axios from 'axios'\nimport { IUnioMessageData } from './data'\nimport './mock'\n\nexport const getMessages = async () => {\n  const result = await axios.get<{ list: IUnioMessageData[]; total: number }>(\n    '/messages'\n  )\n  return result.data\n}\n","import React, { useState, useCallback } from 'react'\nimport MessageList from './components/MessageList'\nimport InputBox from './components/InputBox'\nimport { IUnioMessageData } from './data'\nimport { getMessages } from './service'\nimport './App.css'\n\nfunction App() {\n  const [messageList, setMessageList] = useState<IUnioMessageData[]>([])\n  const [total, setTotal] = useState(0)\n  const [loading, setLoading] = useState(false)\n  const loadMore = useCallback(async () => {\n    if (loading) {\n      return\n    }\n    setLoading(true)\n    const messagesRes = await getMessages()\n    setMessageList([...messagesRes.list, ...messageList])\n    setTotal(messagesRes.total)\n    setLoading(false)\n  }, [loading, messageList])\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">MessageList</header>\n      <MessageList\n        messageList={messageList}\n        total={total}\n        loadMore={loadMore}\n      />\n      <InputBox />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}